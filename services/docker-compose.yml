version: "3"
services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1984BBiwy!
    ports:
      - 27017:27017
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8080:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1984BBiwy!
    depends_on:
      - mongo
  imagerabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "1984BBiwy!"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: imagerabbitmq
    hostname: imagerabbitmq
  imageapi:
    image: imageapi
    build:
      context: .
      dockerfile: imageapi.Dockerfile
    ports: 
      - "8081:80"
    depends_on:
      - imagerabbitmq
      - mongo
  redditlistener:
    image: redditlistener
    build:
      context: .
      dockerfile: redditlistener.Dockerfile
    environment:
      REDDIT_USER: "Father__Rolfe"
      REDDIT_PASS: "2K1omgifos!"
      REDDIT_CLIENTID: "RmafTtvYHjJy2w"
      REDDIT_SECRET: "iVStCj0FAZIRuffqCIPEbbIt-7s"
      REDDIT_REDIRECT: "http://127.0.0.1/"
    tty: true
    depends_on:
      - imagerabbitmq
      - mongo
  imageindexer:
    image: imageindexer
    build:
      context: .
      dockerfile: imageindexer.Dockerfile
    tty: true
    depends_on:
      - imagerabbitmq
  imageretrieval:
    image: imageretrieval
    build:
      context: .
      dockerfile: imageretrieval.Dockerfile
    tty: true
    depends_on:
      - imagerabbitmq
      - mongo
    volumes:
      - images:/var/images
volumes:
  mongodata:
  images:
